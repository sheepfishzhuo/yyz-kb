import{_ as s,c as i,o as a,a5 as n}from"./chunks/framework.DLTOeEcZ.js";const g=JSON.parse('{"title":"Open3D 从体素网格构建八叉树","description":"","frontmatter":{},"headers":[],"relativePath":"point-cloud/Open3D 从体素网格构建八叉树.md","filePath":"point-cloud/Open3D 从体素网格构建八叉树.md"}'),e={name:"point-cloud/Open3D 从体素网格构建八叉树.md"},t=n(`<h1 id="open3d-从体素网格构建八叉树" tabindex="-1">Open3D 从体素网格构建八叉树 <a class="header-anchor" href="#open3d-从体素网格构建八叉树" aria-label="Permalink to &quot;Open3D 从体素网格构建八叉树&quot;">​</a></h1><h2 id="一、主要函数" tabindex="-1">一、主要函数 <a class="header-anchor" href="#一、主要函数" aria-label="Permalink to &quot;一、主要函数&quot;">​</a></h2><h3 id="_1、体素网格" tabindex="-1">1、体素网格 <a class="header-anchor" href="#_1、体素网格" aria-label="Permalink to &quot;1、体素网格&quot;">​</a></h3><p>关于体素网格，见：<a href="https://blog.csdn.net/qq_36686437/article/details/110662957" target="_blank" rel="noreferrer">Open3D 点云和三角网的体素化</a></p><h3 id="_2、从体素网格构建八叉树" tabindex="-1">2、从体素网格构建八叉树 <a class="header-anchor" href="#_2、从体素网格构建八叉树" aria-label="Permalink to &quot;2、从体素网格构建八叉树&quot;">​</a></h3><p>函数<code>create_from_voxel_grid(voxel_grid)</code>从Open3D的<code>VoxelGrid</code>几何结构中构造八叉树。 输入VoxelGrid的每个体素都被视为3D空间中的一个点，其坐标对应于该体素的原点。 每个叶节点都采用其相应体素的颜色。</p><h3 id="_3、从八叉树构建体素网格" tabindex="-1">3、从八叉树构建体素网格 <a class="header-anchor" href="#_3、从八叉树构建体素网格" aria-label="Permalink to &quot;3、从八叉树构建体素网格&quot;">​</a></h3><p>函数<code>to_voxel_grid()</code>将<code>octree</code>转化为<code>VoxelGrid</code></p><h2 id="二、代码实现" tabindex="-1">二、代码实现 <a class="header-anchor" href="#二、代码实现" aria-label="Permalink to &quot;二、代码实现&quot;">​</a></h2><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> open3d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> o3d</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numpy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> np</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pcd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> o3d.io.read_point_cloud(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tree.pcd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 点云归一化到单位立方体中</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pcd.scale(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> np.max(pcd.get_max_bound() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pcd.get_min_bound()),</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">          center</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pcd.get_center())</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">o3d.visualization.draw_geometries([pcd])</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 从点云中创建体素网格</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;voxelization&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">voxel_grid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> o3d.geometry.VoxelGrid.create_from_point_cloud(pcd,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">                                                            voxel_size</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.01</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 可视化体素网格</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">o3d.visualization.draw_geometries([voxel_grid])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 初始化八叉树，最大树深设置为4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">octree </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> o3d.geometry.Octree(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">max_depth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 从体素网格中构建八叉树</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">octree.create_from_voxel_grid(voxel_grid)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 可视化八叉树</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">o3d.visualization.draw_geometries([octree])</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 从八叉树转换成网格</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">voxel_g </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> octree.to_voxel_grid().create_from_point_cloud(pcd,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">                                                         voxel_size</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.01</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 可视化体素网格</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">o3d.visualization.draw_geometries([voxel_g])</span></span></code></pre></div><h2 id="三、结果展示" tabindex="-1">三、结果展示 <a class="header-anchor" href="#三、结果展示" aria-label="Permalink to &quot;三、结果展示&quot;">​</a></h2><h3 id="_1、原始点云" tabindex="-1">1、原始点云 <a class="header-anchor" href="#_1、原始点云" aria-label="Permalink to &quot;1、原始点云&quot;">​</a></h3><p><img src="https://img-blog.csdnimg.cn/20210407200155164.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="_2、体素网格" tabindex="-1">2、体素网格 <a class="header-anchor" href="#_2、体素网格" aria-label="Permalink to &quot;2、体素网格&quot;">​</a></h3><p><img src="https://img-blog.csdnimg.cn/20210407200218641.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="_3、八叉树" tabindex="-1">3、八叉树 <a class="header-anchor" href="#_3、八叉树" aria-label="Permalink to &quot;3、八叉树&quot;">​</a></h3><p><img src="https://img-blog.csdnimg.cn/20210407200236750.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="_4、体素网格" tabindex="-1">4、体素网格 <a class="header-anchor" href="#_4、体素网格" aria-label="Permalink to &quot;4、体素网格&quot;">​</a></h3><p><img src="https://img-blog.csdnimg.cn/20210407200254936.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>`,19),l=[t];function p(h,r,k,o,d,c){return a(),i("div",null,l)}const E=s(e,[["render",p]]);export{g as __pageData,E as default};

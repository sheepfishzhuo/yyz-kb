import{_ as s,c as i,o as a,a5 as n}from"./chunks/framework.DLTOeEcZ.js";const g=JSON.parse('{"title":"Open3D 删除点云中重叠的点","description":"","frontmatter":{},"headers":[],"relativePath":"point-cloud/点云侠/Open3D 删除点云中重叠的点.md","filePath":"point-cloud/点云侠/Open3D 删除点云中重叠的点.md"}'),p={name:"point-cloud/点云侠/Open3D 删除点云中重叠的点.md"},t=n(`<h1 id="open3d-删除点云中重叠的点" tabindex="-1">Open3D 删除点云中重叠的点 <a class="header-anchor" href="#open3d-删除点云中重叠的点" aria-label="Permalink to &quot;Open3D 删除点云中重叠的点&quot;">​</a></h1><h2 id="一、算法原理" tabindex="-1">一、算法原理 <a class="header-anchor" href="#一、算法原理" aria-label="Permalink to &quot;一、算法原理&quot;">​</a></h2><p>如图所示，蓝色为点云的重叠区域。 <img src="https://img-blog.csdnimg.cn/36d39749976043318b55738af0507f70.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><blockquote><p>若某一点在某一距离阈值领域内不止其本身一个点，则认为其有重复点。</p></blockquote><h2 id="二、代码实现" tabindex="-1">二、代码实现 <a class="header-anchor" href="#二、代码实现" aria-label="Permalink to &quot;二、代码实现&quot;">​</a></h2><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> open3d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> o3d</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numpy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> np</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pcd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> o3d.io.read_point_cloud(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bin\\_0.pcd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">point </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> np.asarray(pcd.points)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">point_size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> point.shape[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;原始点云中点的个数为：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, point_size)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tree </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> o3d.geometry.KDTreeFlann(pcd)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 建立KD树索引</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">radius </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.000001</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                     # 定义搜索半径</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">total_idx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> []</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(point_size):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [k, idx, _] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tree.search_radius_vector_3d(pcd.points[i], radius)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 半径搜索</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> k </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        total_idx.append(np.array(idx[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">true_idx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> np.unique(total_idx)                          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 去除重复点的索引</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">repe_cloud </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pcd.select_by_index(true_idx, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">invert</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取重复的点</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">true_cloud </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pcd.select_by_index(true_idx)               </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取去重之后的点</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;删除重复点：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, repe_cloud)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;去重之后：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, true_cloud)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">o3d.io.write_point_cloud(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;重复点.pcd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, repe_cloud)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">o3d.io.write_point_cloud(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;去重后.pcd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, true_cloud)</span></span></code></pre></div><h2 id="三、结果展示" tabindex="-1">三、结果展示 <a class="header-anchor" href="#三、结果展示" aria-label="Permalink to &quot;三、结果展示&quot;">​</a></h2><p><img src="https://img-blog.csdnimg.cn/18a4b29586df4c6e89f3d062fb4d1a30.png" alt="在这里插入图片描述"></p><p>白色为重叠的点 <img src="https://img-blog.csdnimg.cn/15d7c3860182422b9b605b1e1da658d3.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br> 红色为删除重叠之后的点 <img src="https://img-blog.csdnimg.cn/6aa05919c85a49aeace233f83d164796.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="四、cloudcompare" tabindex="-1">四、CloudCompare <a class="header-anchor" href="#四、cloudcompare" aria-label="Permalink to &quot;四、CloudCompare&quot;">​</a></h2><p><img src="https://img-blog.csdnimg.cn/20210108213852922.gif#pic_center" alt="在这里插入图片描述"></p>`,11),h=[t];function l(k,e,r,d,E,o){return a(),i("div",null,h)}const y=s(p,[["render",l]]);export{g as __pageData,y as default};

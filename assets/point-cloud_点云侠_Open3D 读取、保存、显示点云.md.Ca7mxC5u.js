import{_ as s,c as i,o as a,a5 as t}from"./chunks/framework.DLTOeEcZ.js";const g=JSON.parse('{"title":"Open3D 读取、保存、显示点云","description":"","frontmatter":{},"headers":[],"relativePath":"point-cloud/点云侠/Open3D 读取、保存、显示点云.md","filePath":"point-cloud/点云侠/Open3D 读取、保存、显示点云.md"}'),n={name:"point-cloud/点云侠/Open3D 读取、保存、显示点云.md"},h=t(`<h1 id="open3d-读取、保存、显示点云" tabindex="-1">Open3D 读取、保存、显示点云 <a class="header-anchor" href="#open3d-读取、保存、显示点云" aria-label="Permalink to &quot;Open3D 读取、保存、显示点云&quot;">​</a></h1><h2 id="一、主要函数" tabindex="-1">一、主要函数 <a class="header-anchor" href="#一、主要函数" aria-label="Permalink to &quot;一、主要函数&quot;">​</a></h2><h3 id="_1、读取点云" tabindex="-1">1、读取点云 <a class="header-anchor" href="#_1、读取点云" aria-label="Permalink to &quot;1、读取点云&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">read_point_cloud(filename, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">format</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;auto&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">remove_nan_points</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">remove_infinite_points</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">print_progress</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span></code></pre></div><p>从文件读取点云。 当用户不填写点云的扩展名时,会自动解码;若填写它尝试根据扩展名对文件进行解码。</p><ul><li><code>filename</code>：点云文件的路径</li><li><code>format</code>：输入文件的格式。如果未指定或设置为“auto”，则从文件扩展名推断格式。默认参数为:auto</li><li><code>remove_nan_points</code>：默认参数为True，表示将从点云中删除包含NaN的所有点。</li><li><code>remove_infinite_points</code>：默认参数为True，表示将从点云中删除包含无限值的所有点。</li><li><code>print_progress</code>：默认参数为：False，如果设置为True，则在控制台中可视化进度条</li><li><code>read_point_cloud</code> 用来读取点云数据。Open3D通过文件扩展名来解码文件。支持的扩展名是：<code>pcd</code>, <code>ply</code>, <code>xyz</code>,<code>xyzrgb</code>, <code>xyzn</code>, <code>pts</code>。默认情况下，Open3D尝试通过文件扩展名推断文件类型。</li></ul><h3 id="_2、保存点云" tabindex="-1">2、保存点云 <a class="header-anchor" href="#_2、保存点云" aria-label="Permalink to &quot;2、保存点云&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">write_point_cloud(filename, pointcloud, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">write_ascii</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">compressed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">print_progress</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span></code></pre></div><p>保存点云到本地文件夹。</p><ul><li><code>filename</code>：点云文件的路径</li><li><code>pointcloud</code>：待保存的点云</li><li><code>write_ascii</code>：默认参数为:False。设置为True 则以ascii格式输出，否则将使用二进制格式。</li><li><code>compressed</code>：默认参数为:False。设置为True 则表示以压缩格式写入保存点云。</li><li><code>print_progress</code>：默认参数为：False，如果设置为True，则在控制台中可视化进度条</li></ul><h3 id="_3、显示点云" tabindex="-1">3、显示点云 <a class="header-anchor" href="#_3、显示点云" aria-label="Permalink to &quot;3、显示点云&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">draw_geometries(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">window_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Open3D&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">width</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1920</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">height</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1080</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">left</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">top</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">point_show_normal</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">mesh_show_wireframe</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, mesh_show_back_face, \\</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">*args, \\*\\*kwargs):</span></span></code></pre></div><p>可视化点云。 使用鼠标/触控板从不同的角度查看几何图形。按H键为GUI打印出键盘指令的完整列表。</p><ul><li><code>window_name</code>：可视化窗口的显示标题。</li><li><code>width</code>：可视化窗口的宽度。</li><li><code>height</code>：可视化窗口的高度。</li><li><code>left</code>：可视化窗口的左边距。</li><li><code>top</code>：可视化窗口的上边距。</li><li><code>point_show_normal</code>：如果设置为true，则可视化点法线。</li><li><code>mesh_show_wireframe</code>：如果设置为true，则可视化网格线框。</li><li><code>mesh_show_back_face</code>：可视化网格三角形的背面。</li></ul><h3 id="_4、open3d支持的点云格式" tabindex="-1">4、Open3D支持的点云格式 <a class="header-anchor" href="#_4、open3d支持的点云格式" aria-label="Permalink to &quot;4、Open3D支持的点云格式&quot;">​</a></h3><table><thead><tr><th>格式</th><th>描述</th></tr></thead><tbody><tr><td><code>xyz</code></td><td>每一行包含<code>[x,y,z]</code>，其中<code>x,y,z</code>是三维坐标</td></tr><tr><td><code>xyzn</code></td><td>每一行包含<code>[x,y,z,nx,ny,nz]</code>，其中<code>nx,ny,nz</code>是法向量</td></tr><tr><td><code>xyzrgb</code></td><td>每一行包含<code>[x,y,z,r,g,b]</code>，其中<code>r,g,b</code>取值范围是<code>[0,1]</code></td></tr><tr><td><code>pts</code></td><td>第一行是表示点数的整数。随后的行遵循以下一种格式：<code>[x, y, z, i, r, g, b]</code> ,<code>[x, y, z, r, g, b]</code>,<code>[x, y, z, i]</code>或<code>[x, y, z]</code>。其中<code>x,y,z,i</code>是<code>double</code>类型,<code>r,g,b</code>是<code>uint8</code>类型。</td></tr><tr><td><code>ply</code></td><td>见：<a href="http://paulbourke.net/dataformats/ply/" target="_blank" rel="noreferrer">多边形文件格式</a>，<code>ply</code>文件可同时包含点云和网格数据。</td></tr><tr><td><code>pcd</code></td><td>见：<a href="http://pointclouds.org/documentation/tutorials/pcd_file_format.html" target="_blank" rel="noreferrer">点云数据</a>。</td></tr></tbody></table><p>还可以读取指定文件类型，在这种情况下，文件扩展名将被忽略。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pcd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> o3d.io.read_point_cloud(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;飞机.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">format</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xyz&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="_5、输出点云信息" tabindex="-1">5、输出点云信息 <a class="header-anchor" href="#_5、输出点云信息" aria-label="Permalink to &quot;5、输出点云信息&quot;">​</a></h3><ul><li><code>print(pcd)</code>输出点云的点的个数</li><li><code>print(o3d.np.asarray(pcd.points))</code>输出点云中点的三维坐标</li></ul><h2 id="二、代码实现-包括读取txt格式" tabindex="-1">二、代码实现（包括读取txt格式） <a class="header-anchor" href="#二、代码实现-包括读取txt格式" aria-label="Permalink to &quot;二、代码实现（包括读取txt格式）&quot;">​</a></h2><h3 id="_1、读取常见点云" tabindex="-1">1、读取常见点云 <a class="header-anchor" href="#_1、读取常见点云" aria-label="Permalink to &quot;1、读取常见点云&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> open3d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> o3d</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numpy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> np</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pcd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> o3d.io.read_point_cloud(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bunny.pcd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pcd)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#输出点云点的个数</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(np.asarray(pcd.points))</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#输出点的三维坐标</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;给所有的点上一个统一的颜色，颜色是在RGB空间得[0，1]范围内得值&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pcd.paint_uniform_color([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">o3d.io.write_point_cloud(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;copy\\_of\\_fragment.pcd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, pcd)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">o3d.visualization.draw_geometries([pcd])</span></span></code></pre></div><p><img src="https://img-blog.csdnimg.cn/20200826072947453.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FF0000,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="_2、读取txt格式的点云" tabindex="-1">2、读取txt格式的点云 <a class="header-anchor" href="#_2、读取txt格式的点云" aria-label="Permalink to &quot;2、读取txt格式的点云&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> open3d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> o3d</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numpy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> np</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pcd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> o3d.io.read_point_cloud(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;飞机.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">format</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xyz&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pcd)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#输出点云点的个数</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(np.asarray(pcd.points))</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#输出点的三维坐标</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;给所有的点上一个统一的颜色，颜色是在RGB空间得[0，1]范围内得值&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pcd.paint_uniform_color([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">o3d.io.write_point_cloud(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;copy\\_of\\_fragment.pcd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, pcd)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">o3d.visualization.draw_geometries([pcd])</span></span></code></pre></div><p><img src="https://img-blog.csdnimg.cn/20210129194903211.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FF0000,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="_3、可视化两个点云" tabindex="-1">3、可视化两个点云 <a class="header-anchor" href="#_3、可视化两个点云" aria-label="Permalink to &quot;3、可视化两个点云&quot;">​</a></h3><blockquote><p><a href="https://blog.csdn.net/suyunzzz/article/details/105183824" target="_blank" rel="noreferrer">【Open3d】使用open3d可视化</a></p></blockquote><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> open3d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> o3d</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#====================读取点云数据===================</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">source </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> o3d.io.read\\</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">_point\\_cloud(&quot;路口1A.pcd&quot;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">target </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> o3d.io.read\\</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">_point\\_cloud(&quot;路口2A.pcd&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#================可视化两个点云====================</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> view\\</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">_cloud(source, target):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    source.paint\\</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">_uniform\\_color([1, 0, 0])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    target.paint\\</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">_uniform\\_color([0, 1, 0])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    o3d.visualization.draw\\</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">_geometries([source, target])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">view\\</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">_cloud(source, target)</span></span></code></pre></div><h3 id="_4、给点云随机赋色" tabindex="-1">4、给点云随机赋色 <a class="header-anchor" href="#_4、给点云随机赋色" aria-label="Permalink to &quot;4、给点云随机赋色&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> open3d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> o3d</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numpy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> np</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pcd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> o3d.io.read\\</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">_point\\_cloud(&quot;Armadillo.ply&quot;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pcd.colors </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> o3d.utility.Vector3dVector(np.random.uniform(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">o3d.visualization.draw\\</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">_geometries([pcd])</span></span></code></pre></div><p><img src="https://img-blog.csdnimg.cn/20201204172833240.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FF0000,t_70" alt="在这里插入图片描述"></p><h3 id="_5-显示点云自身的颜色" tabindex="-1">5.显示点云自身的颜色 <a class="header-anchor" href="#_5-显示点云自身的颜色" aria-label="Permalink to &quot;5.显示点云自身的颜色&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> open3d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> o3d</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numpy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> np</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pcd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> o3d.io.read_point_cloud(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tree1.pcd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pcd)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#输出点云点的个数</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(np.asarray(pcd.points))</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#输出点的三维坐标</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">o3d.io.write_point_cloud(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;copy\\_of\\_fragment.pcd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, pcd)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">o3d.visualization.draw_geometries([pcd],</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">width</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">height</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><img src="https://img-blog.csdnimg.cn/20210129195623385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FF0000,t_70#pic_center" alt="在这里插入图片描述"></p>`,36),l=[h];function p(e,k,d,r,o,E){return a(),i("div",null,l)}const y=s(n,[["render",p]]);export{g as __pageData,y as default};

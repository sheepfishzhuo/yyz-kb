import{_ as s,c as i,o as a,a5 as t}from"./chunks/framework.DLTOeEcZ.js";const c=JSON.parse('{"title":"Open3D Mesh读写可视化","description":"","frontmatter":{},"headers":[],"relativePath":"point-cloud/Open3D Mesh读写可视化.md","filePath":"point-cloud/Open3D Mesh读写可视化.md"}'),n={name:"point-cloud/Open3D Mesh读写可视化.md"},e=t(`<h1 id="open3d-mesh读写可视化" tabindex="-1">Open3D Mesh读写可视化 <a class="header-anchor" href="#open3d-mesh读写可视化" aria-label="Permalink to &quot;Open3D Mesh读写可视化&quot;">​</a></h1><h2 id="一、主要函数" tabindex="-1">一、主要函数 <a class="header-anchor" href="#一、主要函数" aria-label="Permalink to &quot;一、主要函数&quot;">​</a></h2><p>1、<code>mesh = o3d.io.read_triangle_mesh(&quot;UV.ply&quot;)</code>从文件中读取mesh，支持的文件格式有<code>ply</code>、<code>stl</code>、<code>obj</code>、<code>off</code>、<code>gltf/glb</code></p><p>与点云数据结构相比，网格具有定义三维表面的三角形。默认情况下，Open3D尝试通过文件名扩展名推断文件类型。支持以下mesh文件类型:</p><table><thead><tr><th style="text-align:center;">格式</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ply</code></td><td style="text-align:center;">见：<a href="http://www.open3d.org/docs/release/tutorial/geometry/file_io.html#Mesh" target="_blank" rel="noreferrer">Polygon File Format,</a></td></tr><tr><td style="text-align:center;"><code>stl</code></td><td style="text-align:center;">见：<a href="http://www.fabbers.com/tech/STL_Format" target="_blank" rel="noreferrer">The StL Format</a></td></tr><tr><td style="text-align:center;"><code>obj</code></td><td style="text-align:center;">见：<a href="http://paulbourke.net/dataformats/obj/" target="_blank" rel="noreferrer">Object Files (.obj)</a></td></tr><tr><td style="text-align:center;"><code>off</code></td><td style="text-align:center;">见：<a href="http://www.open3d.org/docs/release/tutorial/geometry/file_io.html" target="_blank" rel="noreferrer">OFF Files</a></td></tr><tr><td style="text-align:center;"><code>gltf/glb</code></td><td style="text-align:center;">见：<a href="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0" target="_blank" rel="noreferrer">GL Transmission Format</a></td></tr><tr><td style="text-align:center;">2、<code>mesh.vertices</code>获取顶点</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">3、<code>mesh.triangles</code>获取三角面片</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">4、<code>o3d.visualization.draw_geometries([mesh])</code>可视化mesh</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">5、<code>mesh.paint_uniform_color([1, 0.076, 0])</code>mesh渲染颜色，颜色在RGB空间[0，1]范围内。</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">6、<code>mesh.compute_vertex_normals()</code>计算mesh的法线</td><td style="text-align:center;"></td></tr></tbody></table><h2 id="二、示例代码" tabindex="-1">二、示例代码 <a class="header-anchor" href="#二、示例代码" aria-label="Permalink to &quot;二、示例代码&quot;">​</a></h2><p><strong>1、mesh</strong> Open3D有一个用于三维三角形网格的数据结构，称为<code>TriangleMesh</code>。下面的代码显示如何从ply文件中读取并打印其顶点和三角形</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Testing mesh in Open3D...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mesh </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> o3dtut.get_knot_mesh()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mesh)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Vertices:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(np.asarray(mesh.vertices))</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 每个点的坐标xyz</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Triangles:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(np.asarray(mesh.triangles))</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 每个面的三个点的索引</span></span></code></pre></div><p>这个<code>TriangleMesh</code>类有一些数据字段，如<code>vertices</code>和<code>triangles</code>。Open3D通过numpy提供了对这些字段的直接内存访问。 <strong>2、可视化mesh</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Try to render a mesh with normals (exist: &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mesh.has_vertex_normals()) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;) and colors (exist: &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mesh.has_vertex_colors()) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">o3d.visualization.draw_geometries([mesh])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;A mesh with no normals and no colors does not look good.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><img src="https://img-blog.csdnimg.cn/2020112017070979.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>可以旋转和移动网格，但是网格被涂成均匀的灰色，看起来不像“ 3d”。原因是当前网格没有顶点或面的法线。因此，使用统一的颜色底纹代替更复杂的Phong底纹。 <strong>3、计算法线</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Computing normal and rendering it.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mesh.compute_vertex_normals()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(np.asarray(mesh.triangle_normals))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">o3d.visualization.draw_geometries([mesh])</span></span></code></pre></div><p><strong>4、mesh上色</strong></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Painting the mesh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mesh.paint_uniform_color([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.706</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">o3d.visualization.draw_geometries([mesh])</span></span></code></pre></div><h2 id="三、完整代码" tabindex="-1">三、完整代码 <a class="header-anchor" href="#三、完整代码" aria-label="Permalink to &quot;三、完整代码&quot;">​</a></h2><p>实现mesh的读写颜色渲染等操作</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> open3d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> o3d</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numpy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> np</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Testing mesh in Open3D...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mesh </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> o3d.io.read_triangle_mesh(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;E://data//UV.ply&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(np.asarray(mesh.vertices))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果没读取到数据则退出程序</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    exit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(np.asarray(mesh.vertices)))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 打印点数和三角面数</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Vertices:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(np.asarray(mesh.vertices))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 输出每个顶点的坐标xyz</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Triangles:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(np.asarray(mesh.triangles))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 每个面的三个点的索引</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># o3d.io.write\\_triangle\\_mesh(&quot;copy\\_of\\_knot.ply&quot;, mesh) # 保存mesh</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Computing normal and rendering it.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mesh.compute_vertex_normals()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(np.asarray(mesh.triangle_normals))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mesh.paint_uniform_color([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 给mesh渲染颜色</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">o3d.visualization.draw_geometries([mesh], </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">window_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Open3D显示mesh模型&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">                                  width</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">height</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">768</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">                                  left</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">top</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">                                  mesh_show_wireframe</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否以格网线的形式显示</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">                                  mesh_show_back_face</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">False</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 是否显示面片背景</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                  )  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 显示mesh模型</span></span></code></pre></div><h2 id="四、结果展示" tabindex="-1">四、结果展示 <a class="header-anchor" href="#四、结果展示" aria-label="Permalink to &quot;四、结果展示&quot;">​</a></h2><p><img src="https://img-blog.csdnimg.cn/20201120171347820.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/1452dcd042f14dbd87990eed9e139a07.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2Njg2NDM3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="五、官网链接" tabindex="-1">五、官网链接 <a class="header-anchor" href="#五、官网链接" aria-label="Permalink to &quot;五、官网链接&quot;">​</a></h2><p><a href="http://www.open3d.org/docs/release/tutorial/geometry/mesh.html" target="_blank" rel="noreferrer">mesh</a></p>`,22),h=[e];function l(p,k,r,d,o,E){return a(),i("div",null,h)}const y=s(n,[["render",l]]);export{c as __pageData,y as default};
